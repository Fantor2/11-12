#Описать функцию Sign(X) целого типа, возвращающую для вещественного
#числа X следующие значения:
#−1, если X < 0; 0, если X = 0; 1, если X > 0
#import random
#x = random.randint
#def Sing(x)
#f =













###Описать функцию RootsCount(A, B, C) целого типа, определяющую
###количество корней квадратного уравнения A·x
###2 + B·x + C = 0 (A, B, C —
###вещественные параметры, A 6= 0). С ее помощью найти количество корней
###для каждого из трех квадратных уравнений с данными коэффициентами.
###Количество корней определять по значению дискриминанта:
###D = B2 − 4·A·C
##import random
##import math
##
##A= random.randint
##B= random.randint
##C= random.randint
##def RootsCount(A,B,C):
##    Discr = B*B - 4 *A * C
##    return Discr
##for i in range(3):
##    if A <= 0:
##        print("ЭТО НЕ КВАДРАТНОЕ УРАВНЕЕНИЕ")
##    else:
##        x1 = (-B - sqrt(Discr)) / 2 * A
##        x2 = (-B + sqrt(Discr)) / 2 * A
##    print("x1",'x2')









###Описать функцию CircleS(R) вещественного
###типа, находящую площадь круга радиуса R (R — вещественное).
###С помощью этой функции найти площади трех кругов с данными радиусами.
###Площадь круга радиуса R вычисляется по формуле S = π·R2.
###В качестве значения π использовать 3.14
##import random
##def CircleS(R):
##    S = 3.14 * (R * 2)
##    return S
##for i in range(3):
##    r=random.randint
##print(S)








#Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца,
#заключенного между двумя окружностями с общим центром
#и радиусами R1 и R2 (R1 и R2 — вещественные,
#R1 > R2). С ее помощью найти площади трех колец,
#для которых даны внешние и внутренние радиусы.
#Воспользоваться формулой площади круга радиуса R: S = π·R2.
#В качестве значения π использовать 3.14
import random
def RingS(R1,R2)
Sring=
















    
    


























